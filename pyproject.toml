[project]
name = "pipe21"
version = "1.11.0"
authors = [
    {name = "Alexander Rodionov", email = "tandav@tandav.me"},
]
description = "simple functional pipes"
readme = "README.md"
requires-python = ">=3.8"
dependencies = []

[project.optional-dependencies]
dev = [
    "bumpver",
    "black",
    "autopep8",
    "pre-commit",
    "hypothesis",
    "pytest",
    "pytest-cov",
    "coveralls",
    "mkdocs",
    "mkdocs-material",
]

[project.urls]
source = "https://github.com/tandav/pipe21"
docs = "https://tandav.github.io/pipe21/"
issues = "https://github.com/tandav/pipe21/issues"
"release notes" = "https://github.com/tandav/pipe21/releases"

# ==============================================================================

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

# ==============================================================================

[tool.bumpver]
current_version = "v1.11.0"
version_pattern = "vMAJOR.MINOR.PATCH"
commit_message = "bump version {old_version} -> {new_version}"
commit = true
tag = true

[tool.bumpver.file_patterns]
"pyproject.toml" = [
    '^version = "{pep440_version}"',
    '^current_version = "{version}"',
]
"pipe21.py" = [
    "^__version__ = '{pep440_version}'",
]

# ==============================================================================

[tool.mypy]
# todo: review this
pretty = true
show_traceback = true
color_output = true
allow_redefinition = false
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
ignore_missing_imports = true
implicit_reexport = false
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false

# ==============================================================================

[tool.ruff]
select = ["ALL"]
ignore = [
    "E501",  # line too long
    "E731", # lambda assignment
    "E701", # multiple statements
    "E702", # multiple statements
    "F403", # star imports
    "F405", # star imports
    "B008", # function-call-in-default-argument
    "PLR0913", # too-many-arguments
    "TCH003", # typing-only-standard-library-import
    "ANN", # type annotations
    "D", #docstrings
    "Q", # quotes
    "ARG005", # Unused lambda argument
    "PTH123", # `open()` should be replaced by `Path.open()`
    "N812", # lowercase imported as non lowercase
]

[tool.ruff.per-file-ignores]
"examples/*" = ["INP001"]
"tests/*" = ["S101", "PLR2004"]

[tool.ruff.isort]
force-single-line = true

# ==============================================================================

[tool.pylint.MASTER]
load-plugins=[
    "pylint_per_file_ignores",
]

[tool.pylint.messages-control]
disable = [
    "invalid-name",
    "missing-function-docstring",
    "missing-class-docstring",
    "missing-module-docstring",
    "unnecessary-lambda-assignment",
    "multiple-statements",
    "line-too-long",
    "unspecified-encoding",
    "wildcard-import",
    "unused-wildcard-import",
    "keyword-arg-before-vararg",
    "too-few-public-methods",
]

[tool.pylint-per-file-ignores]
"/tests/" = "import-error"

# ==============================================================================

[tool.autopep8]
ignore="E501,E701"
recursive = true
aggressive = 3

# ==============================================================================

[tool.flake8]
ignore = ['F405', 'F403', 'E501', 'E701']

# ==============================================================================
